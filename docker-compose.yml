version: '3.8'
services:
    backend:
        hostname: backend
        build:
            context: .
            dockerfile: Dockerfile_backend
        container_name: backend
        command: poetry run uvicorn backend.main:app --host 0.0.0.0 --port ${BACKEND_PORT}
        healthcheck:
            test: curl --fail http://localhost:${BACKEND_PORT}/api/v1/health || exit 1
            interval: 600s
            timeout: 5s
            retries: 3
            start_period: 30s
        volumes:
          - ./backend:/app/backend
        ports:
            - "${BACKEND_PORT}:${BACKEND_PORT}"
        env_file:
            - .env
        restart: always
        depends_on:
            - db
#            - milvus
    frontend:
        hostname: frontend
        build:
            context: .
            dockerfile: Dockerfile_frontend
        container_name: frontend
        command: poetry run streamlit run app.py
        volumes:
          - ./frontend:/app/frontend
        ports:
            - "${FRONTEND_PORT}:${FRONTEND_PORT}"
        env_file:
            - .env
        restart: always
        depends_on:
            - backend
    db:
        hostname: db
        image: postgres:15
        container_name: database
        volumes:
            - ./data/db:/var/lib/postgresql/data
#            - ./sql/marketing_company:/docker-entrypoint-initdb.d
        ports:
            - "${DATABASE_PORT}:5432"
        env_file:
            - .env
        environment:
            POSTGRES_DB: ${DATABASE_NAME}
            POSTGRES_USER: ${DATABASE_USERNAME}
            POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    
#    etcd:
#        container_name: milvus-etcd
#        image: quay.io/coreos/etcd:v3.5.14
#        environment:
#            - ETCD_AUTO_COMPACTION_MODE=revision
#            - ETCD_AUTO_COMPACTION_RETENTION=1000
#            - ETCD_QUOTA_BACKEND_BYTES=4294967296
#            - ETCD_SNAPSHOT_COUNT=50000
#        volumes:
#            - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
#        command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
#
#    minio:
#        container_name: milvus-minio
#        image: minio/minio:RELEASE.2023-03-20T20-16-18Z
#        environment:
#            MINIO_ACCESS_KEY: minioadmin
#            MINIO_SECRET_KEY: minioadmin
#        ports:
#            - "9001:9001"
#            - "9000:9000"
#        volumes:
#            - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
#        command: minio server /minio_data --console-address ":9001"
#        healthcheck:
#            test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
#            interval: 30s
#            timeout: 20s
#            retries: 3
#
#    standalone:
#        container_name: milvus-standalone
#        image: milvusdb/milvus:v2.4.11
#        command: [ "milvus", "run", "standalone" ]
#        environment:
#            ETCD_ENDPOINTS: etcd:2379
#            MINIO_ADDRESS: minio:9000
#        volumes:
#            - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
#        ports:
#            - ${MILVUS_PORT}:19530
#        depends_on:
#            - "etcd"
#            - "minio"
#
#networks:
#  default:
#    name: milvus
#